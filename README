In order to get geoserver to properly secure bitweaver requests you need
to replace one of the files in your geoserver install. So replace
the jar gt2-jdbc-2.4.4.jar located in your geoserver/WEB-INF/lib directory
with the one here and then restart tomcat.

If you are using a newer version of geoserver with a newer version
of geotools than 2.4.4 you may have to rehack the DefaultSQLBuilder.java
with our hacks depending on if this class changed. It is located in
the geotools source at 
modules/library/jdbc/src/main/java/org/geotools/data/jdbc/

Next you need to install bitweaver into a postgis enabled database. We
assume that you have already installed postgis into postgresql. Doing
so is beyond the scope of this document. To create your database for
installing bitweaver do the following:
  createdb <dbname>
  sudo -u postgres createlang plpgsql <dbname>
  sudo -u postgres psql -f </path/to/postgis>/lwpostgis.sql -d <dbname>

Next install bitweaver into this database. Be sure to install
gmap, geoserver and geo when you install. You can either pause before
the package installation step and add to your config/kernel_config.php:
define('POSTGIS_SUPPORT', true); 
define('POSTGIS_SRID', 4326);

Or you can add them after and then 
run php </path/to/bitweaver>/geo/admin/enable_postgis.php
to turn on postgis support in the geo pacakge.

Next you need to add a feature type to geoserver. Go to the geoserver
admin screen and click on data. Then do the following:

1) First create a namespace to hold your data.
2) Next create a datastore and connect it to your database and place it in
the namespace  you just created. The datastore should connect to your
<dbname> created above.
3) Finally add the liberty_feature_type as a point feature type and make
sure it has the alias 'liberty'.

